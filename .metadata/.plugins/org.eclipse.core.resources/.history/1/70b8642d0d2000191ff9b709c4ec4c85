package model;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

public class SimpleServer {

	private ServerSocket server;
	private int port;
	private List<OnPostEventListener> postEventListeners;

	public SimpleServer(int port) throws IOException {
		setPort(port);
		this.postEventListeners = new ArrayList<>();
	}

	public SimpleServer() throws IOException {
		setPort(80);
		this.postEventListeners = new ArrayList<>();
	}

	public void startServer(String fileName) throws IOException {
		System.out.println("Server started! Listening to requests on port " + port);
		new Thread() {

			@Override
			public void run() {
				while (true) {
					File htmlResponse = openFile(fileName);
					try {
					Socket client = server.accept();
					InputStream clientIn = client.getInputStream();
					byte[] cliIn = new byte[1000];
				    clientIn.read(cliIn, 0, 1000);
					//System.out.println("Request from " + client.getPort());
					String cliInStr = new String(cliIn);
					System.out.println(cliInStr);
					if (cliInStr.contains("POST")) {
						handlePostEvent(cliInStr, client);
					} else if (cliInStr.contains("GET")) {
						OutputStream out = client.getOutputStream();
						InputStream in = new FileInputStream(htmlResponse);
						byte[] inBytes = new byte[(int) htmlResponse.length()];
						in.read(inBytes);
						//System.out.println(new String(inBytes));
						out.write("HTTP/1.1 200 OK\r\n\r\n".getBytes("UTF-8"));
						out.write(inBytes);
						in.close();
						out.close();
					}
					} catch (IOException e) {
						e.printStackTrace();
					}
				}	
				
			}
		}.start();
			
	}
	
	public void addPostEventListener( OnPostEventListener listener) {
		this.postEventListeners.add(listener);
	}
	
	public void removePostEventListener(OnPostEventListener listener) {
		this.postEventListeners.remove(listener);
	}
	
	public void setPort(int port) throws IOException {
		server = new ServerSocket(port);
		this.port = port;
	}

	private File openFile(String fileName) {
		return new File(fileName);
	}
	
	public boolean stopServer() {
		try {
			server.close();
		} catch (IOException e) {
			return false;
		}
		return true;
	}

	private void handlePostEvent(String postString, Socket socket) {
		System.out.println("Post to server port number: " + this.port);
		String message = postString.substring(postString.indexOf("Message: ") + 9);
		PostEvent event = new PostEvent(message, parseFileName(postString));
		new Thread() {
			public void run() {
				for(OnPostEventListener listener : postEventListeners) {
					listener.onPostEvent(event);
				}
			}
		}.start();
	}
	
	private String parseFileName(String postString) {
		int beginIndex = postString.indexOf('/');
		int endIndex = postString.indexOf(' ', beginIndex);
		return postString.substring(beginIndex, endIndex);
	}
}
